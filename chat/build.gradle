
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.17'
	}
}
plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

apply plugin: 'com.google.protobuf'

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
group = 'com.spreadmat'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

dependencies {

	implementation 'io.grpc:grpc-stub:1.41.0'
	implementation 'io.grpc:grpc-netty-shaded:1.41.0'
	implementation 'io.grpc:grpc-protobuf:1.41.0'
	implementation 'com.google.protobuf:protobuf-java:3.19.1'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mapstruct:mapstruct:1.4.1.Final'
	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	implementation 'org.springframework.cloud:spring-cloud-starter:3.0.4'
	implementation 'org.springframework.cloud:spring-cloud-stream:3.1.5'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.1.Final"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework:spring-websocket:5.3.12'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

}


protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.17.2'
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:1.41.0"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}


sourceSets {
	main {
		java {
			srcDirs 'build/generated/source/proto/main/grpc'
			srcDirs 'build/generated/source/proto/main/java'
		}
	}
}


// Generate IntelliJ IDEA's .idea & .iml project files
apply plugin: 'idea'

// Provide convenience executables for trying out the examples.
apply plugin: 'application'

startScripts.enabled = false
